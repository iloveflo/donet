<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>